name: Build iOS and Upload to TestFlight

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-ios:
    runs-on: macos-latest

    env:
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      ASC_API_KEY_ID: ${{ secrets.ASC_API_KEY_ID }}
      ASC_API_KEY_P8: ${{ secrets.ASC_API_KEY_P8 }}
      ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
      BUNDLE_ID: ${{ secrets.BUNDLE_ID }}
      IOS_CERTIFICATE: ${{ secrets.IOS_CERTIFICATE }}
      IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}


    steps:
      # 1Ô∏è‚É£ Checkout do reposit√≥rio
      - name: Checkout repository
        uses: actions/checkout@v4


      # 2Ô∏è‚É£ Setup Flutter (iOS-only)
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8' # ajuste se precisar
          channel: 'stable'
          architecture: 'arm64'

      # 3Ô∏è‚É£ Instalar depend√™ncias
      - name: Install dependencies
        run: flutter pub get

      # 4Ô∏è‚É£ Criar e desbloquear keychain
      - name: Setup keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          security default-keychain -s build.keychain
      - name: Testar vari√°vel
        run: |
          echo "O valor √©: $IOS_CERTIFICATE" # aqui vai aparecer ***

      - name: Debug vari√°veis do ambiente (sem decodificar)
        run: |
          echo "IOS_CERTIFICATE (primeiros 100 chars):"
          echo "${IOS_CERTIFICATE:0:100}"
          echo
          echo "IOS_CERTIFICATE_PASSWORD:"
          echo "$IOS_CERTIFICATE_PASSWORD"

      # 5Ô∏è‚É£ Importar certificado P12
      - name: Import certificate
        run: |
          printf "%s" "$IOS_CERTIFICATE" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          rm certificate.p12

      # 6Ô∏è‚É£ Adicionar perfil de provisionamento
      - name: Add provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          printf "%s" "$IOS_PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      # 7Ô∏è‚É£ Criar arquivo da chave API da Apple
      - name: Create API key file
        run: |
          mkdir -p ~/private_keys
          printf "%s" "$ASC_API_KEY_P8" | base64 --decode > ~/private_keys/AuthKey_${ASC_API_KEY_ID}.p8

      # 8Ô∏è‚É£ Build do IPA
      - name: Build IPA
        run: |
          flutter build ipa --release \
            --export-options-plist=ios/ExportOptions.plist

      # 9Ô∏è‚É£ Instalar Fastlane
      - name: Install fastlane
        run: sudo gem install fastlane -NV

      # üîü Upload para TestFlight via Fastlane
      - name: Upload to TestFlight via fastlane
        run: |
          fastlane pilot upload \
            --ipa "build/ios/ipa/$(ls build/ios/ipa | head -n 1)" \
            --api_key_path ~/private_keys/AuthKey_${ASC_API_KEY_ID}.p8
